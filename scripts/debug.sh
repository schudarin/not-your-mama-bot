#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ—Ç–ª–∞–¥–∫–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Not Your Mama Bot
set -e

echo "üîç Not Your Mama Bot - –û—Ç–ª–∞–¥–∫–∞"
echo "=============================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
setup_logs() {
    print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    mkdir -p logs
    mkdir -p logs/debug
    mkdir -p logs/errors
    mkdir -p logs/updates
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
    touch logs/bot.log
    touch logs/errors.log
    touch logs/updates.log
    touch logs/debug.log
    
    print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω—ã"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
tail_logs() {
    print_info "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ª–æ–≥–æ–≤:"
    echo "1) –í—Å–µ –ª–æ–≥–∏"
    echo "2) –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏"
    echo "3) –¢–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    echo "4) –¢–æ–ª—å–∫–æ –æ—Ç–ª–∞–¥–∫–∞"
    echo ""
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-4): " choice
    
    case $choice in
        1)
            tail -f logs/*.log
            ;;
        2)
            tail -f logs/errors.log
            ;;
        3)
            tail -f logs/updates.log
            ;;
        4)
            tail -f logs/debug.log
            ;;
        *)
            print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            exit 1
            ;;
    esac
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—à–∏–±–æ–∫
show_errors() {
    print_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
    echo ""
    
    if [ -f "logs/errors.log" ]; then
        if [ -s "logs/errors.log" ]; then
            tail -20 logs/errors.log
        else
            print_success "–û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        fi
    else
        print_warning "–§–∞–π–ª –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    if systemctl is-active --quiet not-your-mama-bot; then
        print_success "–°–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω"
        systemctl status not-your-mama-bot --no-pager -l
    else
        print_error "–°–µ—Ä–≤–∏—Å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
        systemctl status not-your-mama-bot --no-pager -l
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ -f ".env" ]; then
        print_success "–§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"
        echo ""
        echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env:"
        cat .env | sed 's/=.*/=***/'  # –°–∫—Ä—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
    else
        print_warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    print_info "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:+***}"
    echo "OPENAI_API_KEY: ${OPENAI_API_KEY:+***}"
    echo "BOT_USERNAME: ${BOT_USERNAME:-–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_deps() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [ -d "venv" ]; then
        print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ"
        source venv/bin/activate
        
        echo ""
        echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:"
        pip list | grep -E "(telegram|openai|duckduckgo)"
    else
        print_warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
clean_logs() {
    print_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤..."
    
    # –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
    find logs -name "*.log" -mtime +7 -delete 2>/dev/null || true
    
    # –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
    find logs -name "*.log" -size 0 -delete 2>/dev/null || true
    
    print_success "–°—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
}

# –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤
export_logs() {
    print_info "–≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤..."
    
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    ARCHIVE="logs_export_${TIMESTAMP}.tar.gz"
    
    tar -czf "$ARCHIVE" logs/ 2>/dev/null || true
    
    if [ -f "$ARCHIVE" ]; then
        print_success "–õ–æ–≥–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ $ARCHIVE"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ª–æ–≥–æ–≤"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    setup_logs
    
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    echo "1) –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "2) –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏"
    echo "3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
    echo "4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "5) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    echo "6) –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏"
    echo "7) –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏"
    echo "8) –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"
    echo ""
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-8): " choice
    
    case $choice in
        1)
            tail_logs
            ;;
        2)
            show_errors
            ;;
        3)
            check_service
            ;;
        4)
            check_env
            ;;
        5)
            check_deps
            ;;
        6)
            clean_logs
            ;;
        7)
            export_logs
            ;;
        8)
            check_service
            echo ""
            check_env
            echo ""
            check_deps
            echo ""
            show_errors
            ;;
        *)
            print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main
